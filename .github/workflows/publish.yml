name: Publish

on:
  push:
    branches:
      - main

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true
  RELEASES_DIR: "./releases"
  NUPKG_VERSION: 8.0.${{ github.run_number }}
  NuGetDirectory: ${{ github.workspace}}/nuget
  PROJECTS: |
    DotNetBuddy.Domain
    DotNetBuddy.Application
    DotNetBuddy.Infrastructure
    DotNetBuddy.Presentation

jobs:
  create_nuget:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.100

      - name: Build and Pack NuGet Packages
        run: |
          mkdir -p "${{ env.NuGetDirectory }}"
          readarray -t PROJECTS <<< "${{ env.PROJECTS }}"
          for PROJECT in "${PROJECTS[@]}"; do
            # Skip empty lines
            [ -z "$PROJECT" ] && continue
            echo "Packing $PROJECT..."
            dotnet pack "$PROJECT/$PROJECT.csproj" --configuration Release \
              -p:PackageVersion="${{ env.NUPKG_VERSION }}" --output "${{ env.NuGetDirectory }}"
          done

      - name: Upload NuGet artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nuget
          if-no-files-found: error
          retention-days: 7
          path: ${{ env.NuGetDirectory }}/*.nupkg

  run_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
      - name: Run tests
        run: dotnet test --configuration Release

  deploy:
    runs-on: ubuntu-latest
    needs: [ create_nuget, run_test ]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: nuget
          path: ${{ env.NuGetDirectory }}

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4

      - name: Publish NuGet packages
        run: |
          for nupkg in ${{ env.NuGetDirectory }}/*.nupkg; do
            echo "Pushing $nupkg..."
            dotnet nuget push "$nupkg" --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
          done